@model SafeShop.Application.ViewModels.ProductListPageModel

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PaginatedProperty.First().ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaginatedProperty.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaginatedProperty.First().Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaginatedProperty.First().Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.PaginatedProperty) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(int.Parse(ViewData["PageNumber"].ToString()) - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(int.Parse(ViewData["PageNumber"].ToString()) + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
